class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists==null||lists.length==0) return null;
        ListNode dummy = new ListNode(0);
        PriorityQueue<ListNode> pq = new PriorityQueue<>((a,b)->a.val-b.val);
        for(int i = 0;i<lists.length;i++){
            if(lists[i]!=null){
                pq.offer(lists[i]);
            }   
        }
        ListNode l = dummy;
        while(!pq.isEmpty()){
            ListNode node = pq.poll();
            l.next = node;
            l = l.next;
            if(node.next!=null){
                pq.offer(node.next);
            }
            node.next = null;    
        }
        return dummy.next;
    }
}