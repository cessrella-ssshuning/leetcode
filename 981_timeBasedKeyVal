class TimeMap {
    /*
    pq((a,b)->b.timestamp-a.timestamp) 
    
    foo, bar, 1
    map.put(key,list<comb>)
            foo, list<(bar,1)
     foo -> list
     within the list, do binary search
      
    */
    class Comb{
        String value;
        int timestamp;
        public Comb(String value,int timestamp){
            this.value = value;
            this.timestamp = timestamp;
        }
    }
    Map<String,List<Comb>> map;
    public TimeMap() {
        map = new HashMap<>();
    }
    
    public void set(String key, String value, int timestamp) {
        map.putIfAbsent(key,new ArrayList<>());
        map.get(key).add(new Comb(value,timestamp));
    }
    
    public String get(String key, int timestamp) {
        if(!map.containsKey(key)) return "";
        List<Comb> list = map.get(key);
        String s = binarySearch(list,timestamp);
        return s;
    }
    private String binarySearch(List<Comb> list,int timestamp){
        int st = 0;
        int end = list.size()-1;
        while(st+1<end){
            int mid = (st+end)/2;
            if(list.get(mid).timestamp==timestamp) return list.get(mid).value;
            else if(list.get(mid).timestamp>timestamp){
                end = mid-1;
            }else{
                st = mid;
            }
        }
        if(list.get(end).timestamp<=timestamp) return list.get(end).value;
        else if(list.get(st).timestamp<=timestamp) return list.get(st).value;
        return "";
    }
}