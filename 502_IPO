class Solution {

    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {
        int n = profits.length;
        int count = 1;
        int[][] tasks = new int[n][2];
        for(int i = 0;i<n;i++){
            tasks[i][0] = capital[i];
            tasks[i][1] = profits[i];
        }
        Arrays.sort(tasks,(a,b)->a[0]==b[0]?b[1]-a[1]:a[0]-b[0]);
        Queue<Integer> queue = new PriorityQueue<>((a,b)->b-a);//to store the index of the to be done projects, and the projects should be ordered by profits
        int num = 0;
        for(int i = 1;i<=k;i++){
            while(num<n&&w>=tasks[num][0]){
                queue.offer(tasks[num][1]);
                num++;
            }
            if(queue.isEmpty()) break;
            w += queue.poll();
        }
        return w;
    }
}