class Solution {
    /*
    [0,                30]
        [5, 10] [15,20]
    mapping{(0,1)(5,1)(10,-1)(15,1)(20,-1)(30,-1)} 
    res  2
    flag 0
     [1,13]
          [13,15]
     [1,1][13,-1][13,1][15,-1]
     res  1
     flag 0
    */
    public int minMeetingRooms(int[][] intervals) {
        int[][] mapping = new int[intervals.length*2][2];
        int j = 0;
        for(int i = 0;i<intervals.length;i++){
            mapping[j][0] = intervals[i][0];
            mapping[j++][1] = 1;
            mapping[j][0] = intervals[i][1];
            mapping[j++][1] = -1;
        }
        int res = 0;
        int flag = 0;
        Arrays.sort(mapping,(a,b)->a[0]-b[0]==0?a[1]-b[1]:a[0]-b[0]);
        for(int i = 0;i<mapping.length;i++){
            flag += mapping[i][1];
            res = Math.max(res,flag);
        }
        return res;        
    }
}