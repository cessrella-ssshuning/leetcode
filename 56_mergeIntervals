class Solution {
    /*
    - - - 
      - - - - -   - - -        - - - -
    [1,1][2,1][3,-1][6,-1][8,1][10,-1][15,1][18,-1]
    */
    public int[][] merge(int[][] intervals) {
        List<int[]> list = new ArrayList<>();
        for(int[] interval:intervals){
            list.add(new int[]{interval[0],1});
            list.add(new int[]{interval[1],-1});
        }
        Collections.sort(list,new Comparator<int[]>(){
            @Override
            public int compare(int[] a, int[] b) {
                if(a[0]!=b[0]){
                    return a[0]-b[0];
                }else{
                    return b[1]-a[1];
                }
            }
        });
        int j = 0;
        int[][] interRes = new int[intervals.length][2];
        int flag = 0;
        for(int i = 0;i<list.size();i++){
            if(flag==0){
                interRes[j][0] = list.get(i)[0];
            }
            flag += list.get(i)[1];
            while(flag!=0){
                flag+=list.get(++i)[1];
            }
            interRes[j][1] = list.get(i)[0];
            j++;
        }
        int[][] realRes = new int[j][2];

        for(int k = 0;k<j;k++){
            realRes[k] = interRes[k];
        }
        return realRes;
        
    }
    
}