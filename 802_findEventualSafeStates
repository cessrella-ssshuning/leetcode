class Solution {
    /*
    0->1
    */
    int[][] graph;
    int[] visited;
    public List<Integer> eventualSafeNodes(int[][] graph) {
        List<Integer> res = new ArrayList<>();
        this.graph = graph;
        visited = new int[graph.length];
        for(int i = 0;i<graph.length;i++){
            if(dfs(i)) res.add(i);
        }
        Collections.sort(res);
        return res;
    }
    private boolean dfs(int cur){
        if(visited[cur]==1) return true;
        if(visited[cur]==2) return false;
        visited[cur] = 2;//first time visiting
        for(int next:graph[cur]){
            if(!dfs(next)) return false;
        }
        visited[cur] = 1;
        return true;
        
    }
}