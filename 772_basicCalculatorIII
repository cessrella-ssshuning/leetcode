class Solution {
    /*  
    3*14/7+2
           ^
    stack(6,2)
    preSign +
    val 7
    */
    public int calculate(String s) {
        Stack<String> stack = new Stack<>();
        String curStr="";
        for(int i = 0;i<s.length();i++){
            if(s.charAt(i)=='('){
                stack.push(curStr);
                curStr = "";
            }else if(s.charAt(i)==')'){
                int val = helper(curStr);
          //      System.out.println(curStr+","+val);
                curStr = stack.pop()+""+val;
                
            }else{
                curStr = curStr+s.charAt(i);
            }
        }
     //   System.out.println(curStr);
        return helper(curStr);
    }
    // 2--1 = 2+1
    //  ^
    // 2+-1 = 2-1 np
    // 2-+1 = 2-1 
    // preSign -   
    private int helper(String s){
        int sum = 0;
        char preSign1 = '+';
        char preSign2 = '+';
        boolean preIsSign = false;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0;i<s.length();i++){
            char c = s.charAt(i);
            int val = 0;
            if(Character.isDigit(c)){
                while(i<s.length()&&Character.isDigit(s.charAt(i))){
                    val = val*10+s.charAt(i)-'0';
                    i++;
                }
                i--;
                
                if(preIsSign){
                    if(preSign2=='-'){
                        val = -val;
                    }
                }
                switch(preSign1){
                    case '-':
                        val = -val;
                        break;
                    case '*':
                        val = stack.pop()*val;
                        break;
                    case '/':
                        val = stack.pop()/val;
                        break;
                }  
                preIsSign = false;
                stack.push(val);
                
            }else{
                if(preIsSign){
                    preSign2 = c;
                }else{
                    preSign1 = c;
                    preSign2 = '+';
                }        
                preIsSign = true;
            }       
        }
        while(!stack.isEmpty()){
            sum += stack.pop();
        }
        return sum;
    }
 
}