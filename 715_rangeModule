class RangeModule {
    /*
            [10,  14)     [16,   20)
            leftKey 10
            rightKey 10
     */
    TreeMap<Integer,Integer> map;
    public RangeModule() {
        map = new TreeMap<>();
    }
    
    public void addRange(int left, int right) {
        Integer leftKey = map.floorKey(left);
        Integer rightKey = map.floorKey(right);
        if(leftKey!=null&&map.get(leftKey)>=left){
            left = leftKey;
        }
        if(rightKey!=null&&map.get(rightKey)>right){
            right = map.get(rightKey);
        }
        map.put(left,right);
        map.subMap(left,false,right,true).clear();
    }
    
    public boolean queryRange(int left, int right) {
        if(right<=left) return false;
        Integer leftKey = map.floorKey(left);
        Integer rightKey = map.floorKey(right);
        if(leftKey!=null&&rightKey!=null&&leftKey==rightKey&&map.get(rightKey)>=right){
            return true;
        }
        return false;
    }
    
    public void removeRange(int left, int right) {
        Integer leftKey = map.floorKey(left);
        Integer rightKey = map.floorKey(right);
        if(leftKey!=null&&map.get(leftKey)>left){//这个放在前面，leftkey会被覆盖
            map.put(leftKey,left);
        }
        if(rightKey!=null&&map.get(rightKey)>right){//这个放在前面，原来的rightkey不变
            map.put(right,map.get(rightKey));
        }
        map.subMap(left,true,right,false).clear();
    }
}