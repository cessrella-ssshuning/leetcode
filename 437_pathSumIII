class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        if(root==null) return 0;
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0,1);
        return pathSumHelper(root,0,targetSum,map);
        
    }
    private int pathSumHelper(TreeNode node,int sum,int target,Map<Integer,Integer> map){
        if(node==null) return 0;
        sum += node.val;
        int numCurr = map.getOrDefault(sum-target,0);
        map.put(sum,map.getOrDefault(sum,0)+1);
        int res = numCurr + pathSumHelper(node.left,sum,target,map) + pathSumHelper(node.right,sum,target,map);
        map.put(sum,map.get(sum)-1);
        return res;
    }
    
}