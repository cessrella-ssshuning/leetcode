class Solution {
    /*
    word  "AAB"
           ^ 
    C 0 A
    A A A
    B C D
    A -> CAA-> CAA false
            ->
    */
    public boolean exist(char[][] board, String word) {
        for(int i =0;i<board.length;i++){
            for(int j = 0;j<board[0].length;j++){
                if(dfs(i,j,board,word,0)) return true;
            }
        }
        return false;
    }
    int[][] dirs = new int[][]{{1,0},{0,1},{-1,0},{0,-1}};
    private boolean dfs(int i,int j,char[][] board,String word,int index){
        
        if(i<0||i>=board.length||j<0||j>=board[0].length||board[i][j]!=word.charAt(index)) return false;
        if(index==word.length()-1) return true;
        char c = board[i][j];
        board[i][j] = '0';
        for(int[] dir:dirs){
            int x = dir[0]+i;
            int y = dir[1]+j;
            if(dfs(x,y,board,word,index+1)) return true;     
        }
        board[i][j] = c;
        return false;
    }
}