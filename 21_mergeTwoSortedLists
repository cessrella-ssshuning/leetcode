class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode l = dummy;
        while(l1!=null||l2!=null){
            if(l1!=null&&l2!=null){
                if(l1.val==l2.val){
                    l.next = l2;
                    l2 = l2.next;
                    l = l.next;
                    l.next = l1;
                    l1 = l1.next;
                }else if(l1.val>l2.val){
                    l.next = l2;
                    l2 = l2.next;
                }else{
                    l.next = l1;
                    l1 = l1.next;
                }
                l = l.next;
            }else if(l1!=null){
                l.next = l1;
                l = l.next;
                l1 = l1.next;
            }else if(l2!=null){
                l.next = l2;
                l = l.next;
                l2 = l2.next;
            }
        }
        return dummy.next;
    }
}
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null) return l2;
        if(l2==null) return l1;
        if(l1.val<l2.val){
            l1.next = mergeTwoLists(l1.next,l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;
        }
    }
}