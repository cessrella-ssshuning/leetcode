class Solution {
    /*
    ())
    ^
    stack()
    (((
    greedy or stack
    stack: record the imbalanced parenthesis
    greedy: when matched not removing any one because we want to get min add
    stack(r,r)
    */
    public int minAddToMakeValid(String s) {
        int count = 0;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0;i<s.length();i++){
            char c = s.charAt(i);
            if(c=='('){
                stack.push(i);
            }else{
                if(stack.isEmpty()){
                    count++;
                }else{
                    stack.pop();//don't pop previous pushed right parenthesis
                }
            }
        }
        return count+stack.size();
    }
}