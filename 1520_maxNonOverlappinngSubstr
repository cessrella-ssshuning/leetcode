class Solution {
    /*
    "adefadda ccc"
     01234567 8910
     ^
    */
    public List<String> maxNumOfSubstrings(String s) {
        List<String> res = new ArrayList<>();
        int[] l = new int[26];
        int[] r = new int[26];
        Arrays.fill(l,Integer.MAX_VALUE);
        for(int i = 0;i<s.length();i++){
            int ch = s.charAt(i)-'a';
            l[ch] = Math.min(l[ch],i);
            r[ch] = i;
        }
       
        int right = -1;//record the previous right,either contain or non-overlap
        for(int i = 0;i<s.length();i++){
            int left = l[s.charAt(i)-'a']; 
            if(left==i){
                int new_right = checkSubstr(i,l,r,s);
                if(new_right!=-1){//means the substring starting with this char exits

                    if(i>right){//means existing a non-containing substring
                        res.add("");
                    }
                    right = new_right;
                    res.set(res.size()-1,s.substring(left,new_right+1));
                }
            }
            
        }
        return res;
        
    }
    private int checkSubstr(int i,int[] l, int[] r,String s){
        int right = r[s.charAt(i)-'a'];
        for(int j = i;j<=right;j++){
            if(l[s.charAt(j)-'a']<i) return -1;
            right = Math.max(right,r[s.charAt(j)-'a']);
        }
        return right;
        
    }
}