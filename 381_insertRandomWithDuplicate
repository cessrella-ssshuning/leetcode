class RandomizedCollection {
    Random rd;
    List<Integer> list;
    Map<Integer,HashSet<Integer>> map;
    /** Initialize your data structure here. */
    public RandomizedCollection() {
        rd = new Random();
        list = new ArrayList<>();
        map = new HashMap<>();
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public boolean insert(int val) {
        boolean contain = map.containsKey(val);
        if(!contain){
            map.put(val,new HashSet<Integer>());
        }
        map.get(val).add(list.size());
        list.add(val);
        return !contain;
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public boolean remove(int val) {
        if(!map.containsKey(val)) return false;
        int size = list.size();
        if(!map.get(val).contains(size-1)){//val is not the last element\
            int currPos = map.get(val).iterator().next();
            int lastVal = list.get(size-1);
            map.get(lastVal).remove(size-1);
            map.get(val).remove(currPos);
            map.get(val).add(size-1); //cannot remove this line
            map.get(lastVal).add(currPos);
            list.set(currPos,lastVal); 
        }
        
        map.get(val).remove(size-1);
        if(map.get(val).isEmpty()) map.remove(val);
        list.remove(size-1);
        return true; 
    }
    
    /** Get a random element from the collection. */
    public int getRandom() {
        int idx = rd.nextInt(list.size());
        return list.get(idx);        
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */