class Solution {
    public List<Integer> diffWaysToCompute(String expression) {
        List<Integer> res = new ArrayList<>();
        for(int i = 0;i<expression.length();i++){
            if(expression.charAt(i)=='+'||
              expression.charAt(i)=='-'||
              expression.charAt(i)=='*'){
                String part1 = expression.substring(0,i);
                String part2 = expression.substring(i+1);
                List<Integer> res1 = diffWaysToCompute(part1);
                List<Integer> res2 = diffWaysToCompute(part2);
                for(int num1:res1){
                    for(int num2:res2){
                        int c = 0;
                        switch(expression.charAt(i)){
                            case '+':
                                c = num1+num2;
                                break;
                            case '-':
                                c = num1-num2;
                                break;
                            case '*':
                                c = num1*num2;
                        }
                        res.add(c);
                    }
                }
            }
            //add here because under situation when coming into an operator, the number after will be executed already
            
        }
        if(res.size()==0){
            res.add(Integer.valueOf(expression));
        }
        return res;
    }
}