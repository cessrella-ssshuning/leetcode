class Solution {
    /*
    dp[11] = Math.min(dp[10],dp[9],dp[6])+1;
    dp[6] = Math.min(dp[5],dp[4],dp[1])+1;
  
    dp[1] = dp[0]+1;
    dp[2] = dp[0]+1;
    dp[5] = Math.min(dp[4],dp[3],dp[0])+1 = 1
    */
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount+1];
        Arrays.fill(dp,Integer.MAX_VALUE);  
        dp[0] = 0;
        for(int i = 1;i<=amount;i++){
            for(int j = 0;j<coins.length;j++){
                if(i-coins[j]>=0&&dp[i-coins[j]]!=Integer.MAX_VALUE){
                    dp[i] = Math.min(dp[i],dp[i-coins[j]]+1);
                }                
            }            
        }
        if(dp[amount]==Integer.MAX_VALUE) return -1;
        else return dp[amount];
    }
    
}