class Solution {
    /*
    "LEETCODE"
     01234567
       ^
     A . . . A . . . A 
     0 1 2 3 4 5 6 7 8
     
    */
    public int uniqueLetterString(String s) {
        int[] chars = new int[26];//track the last appearance, index
        int[] leftPos = new int[s.length()];
        int[] rightPos = new int[s.length()];
        Arrays.fill(chars,-1);
        Arrays.fill(leftPos,-1);
        Arrays.fill(rightPos,s.length());
        for(int i = 0;i<s.length();i++){
            int num = s.charAt(i)-'A';
            if(chars[num]!=-1){
                leftPos[i] = chars[num];
            }
            chars[num] = i;
        }
        Arrays.fill(chars,-1);
        for(int i = s.length()-1;i>=0;i--){
            int num = s.charAt(i)-'A';
            if(chars[num]!=-1){
                rightPos[i] = chars[num];//right arr to track last appearance on the right
            }
            chars[num] = i;
        }
        int res = 0;
        for(int i = 0;i<s.length();i++){
          //  System.out.println(leftPos[i]+","+rightPos[i]);
            int leftBound = leftPos[i]==-1?0:leftPos[i]+1;//we need to take the next element of the last appearance
            int rightBound = rightPos[i]==s.length()?s.length()-1:rightPos[i]-1;
            res += (i-leftBound+1)*(rightBound-i+1);
        }
        return res;
    }
 //      ABA
 //       0  1 2
 // left  0  0 1   -1 -1 0
 // chars 0  1 2
 // right 1  2 2    2  3 3
 // res = 1*2+2*2+2*1
         
}