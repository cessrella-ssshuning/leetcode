class Solution {
    /* 
      2 2 6
    0 1 2 3
          ^
    dp[0] = 1
    dp[1] = 1
    dp[2] += dp[1] //last one digit is legal ->2
    dp[2] += dp[0] //last two digits are legal  ->22
    dp[2] = 2
    dp[3] += dp[2]
    dp[3] += dp[1]
    dp[3] = 2+1=3
    */
    public int numDecodings(String s) {
        
        int[] dp = new int[s.length()+1];
        dp[0] = 1;
     //   dp[i] when I have a string length of i, there are how many decoding ways
        if(s==null||s.length()==0) return 0;
        if(s.charAt(0)=='0') return 0;
        dp[1] = 1;

        for(int i = 2;i<=s.length();i++){
            if(s.charAt(i-1)!='0'){// 1 1
                dp[i] += dp[i-1];//decoding(1)->decoding(2)
            }
            int num = Integer.valueOf(s.substring(i-2,i));
            if(num>=10&&num<=26){
                dp[i] += dp[i-2];
            }
        }
        return dp[s.length()];
    }
}