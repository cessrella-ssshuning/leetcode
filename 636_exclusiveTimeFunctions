class Solution {
    /*
    ["0:start:0","1:start:2","1:end:5","0:end:6"]
    res {}
    prevTime 
    parts {}
    stack {0,1,2,} 
             -----
    -----------
    */
    public int[] exclusiveTime(int n, List<String> logs) {
        int[] res = new int[n];
        Stack<Integer> stack = new Stack<>();
        int prevTime = 0;
        for(String log:logs){
            String[] pair = log.split(":");
            int id = Integer.parseInt(pair[0]);
            String type = pair[1];
            int timestamp = Integer.parseInt(pair[2]);
            if(type.equals("start")){
                if(!stack.isEmpty()){
                    res[stack.peek()]+=timestamp-prevTime;
                }
                prevTime = timestamp;//update end time
                stack.push(id);
            }else{
               // System.out.println(stack.peek());
                res[stack.pop()]+=timestamp-prevTime+1;
                prevTime = timestamp+1;//update start time
            }
        }
        return res;
    }
}