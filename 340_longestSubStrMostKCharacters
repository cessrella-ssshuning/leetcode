class Solution {
    /*
    aba
    ^
    l 0
    r 0
    map((a,1))
    */
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int l = 0,r = 0;
        if(k<=0) return 0;
        Map<Character,Integer> map = new HashMap<>();
        int res = 0;
        while(r<s.length()){
            char c = s.charAt(r);
            while(!map.containsKey(c)&&map.size()==k){
                char stC = s.charAt(l);
                if(map.get(stC)==1){
                    map.remove(stC);
                }else{
                    map.put(stC,map.get(stC)-1);
                }
                l++;
            }
            
            map.put(c,map.getOrDefault(c,0)+1);
            
            res = Math.max(res,r-l+1);
            r++;
            
        }
        return res;
    }
}