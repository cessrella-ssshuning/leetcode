public int minSkips(int[] dist, int speed, int hoursBefore) {
        double sum = 0.0;
        int n = dist.length;
        int[] dist2 = new int[n+1];
        for(int i = 1;i<=n;i++){
            sum+=dist[i-1];
            dist2[i] = dist[i-1];
        }
        if(sum/speed>hoursBefore) return -1;
        double[][] dp = new double[n+1][n+1];
        dp[0][0] = 0;
        for(int i = 1;i<n;i++){
            for(int j = 0;j<=i;j++){
                //skip rest for ith road,then only j-1 skips left for (i-1)th road
                
                dp[i][j] = Math.ceil(dp[i-1][j]+dist2[i]*1.0/speed-1e-8);
                double temp = dp[i-1][j]+dist2[i]*1.0/speed;
                System.out.println(dp[i][j]+", "+temp);
                if(j>=1)dp[i][j] = Math.min(dp[i][j],dp[i-1][j-1]+dist2[i]*1.0/speed);
            }
        }
        for(int j = 0;j<=n;j++){
            dp[n][j] = dp[n-1][j]+dist2[n]*1.0/speed;
            System.out.println(j+","+dp[n][j]);
            if(dp[n][j]<=hoursBefore) return j;
        }
        return -1;
    }