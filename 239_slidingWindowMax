class Solution {
    /*
    [1,3,-1,-3,5,3,6,7]
     0 1  2  3 4 5 6 7
     i
     [7]
      
    */
    public int[] maxSlidingWindow(int[] nums, int k) {
        int[] res = new int[nums.length-k+1];
        Deque<Integer> deque = new ArrayDeque<>();
        int j = 0;
        for(int i = 0;i<nums.length;i++){
            //every time we only need to remove one element
            if(!deque.isEmpty()&&deque.peekFirst()<i-k+1){
                deque.pollFirst();
            }
            //removing one
            while(!deque.isEmpty()&&nums[deque.peekLast()]<nums[i]){
                deque.pollLast();
            }
            deque.offer(i);
            if(i>=k-1&&j<res.length){
                res[j++] = nums[deque.peekFirst()];
            }
        }
        return res;
    }
}
